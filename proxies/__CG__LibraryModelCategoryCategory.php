<?php

namespace DoctrineProxies\__CG__\Library\Model\Category;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Category extends \Library\Model\Category\Category implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'name', 'inactive', 'parent_category', 'child_categories', 'page', 'description', 'keywords', 'default_image', 'delete_later', 'sort_order', 'category_products', 'category_discounts', 'query_list', 'points_to', 'id', 'date_created', 'date_modified');
        }

        return array('__isInitialized__', 'name', 'inactive', 'parent_category', 'child_categories', 'page', 'description', 'keywords', 'default_image', 'delete_later', 'sort_order', 'category_products', 'category_discounts', 'query_list', 'points_to', 'id', 'date_created', 'date_modified');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Category $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPointsTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointsTo', array());

        return parent::getPointsTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPointsTo($points_to)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPointsTo', array($points_to));

        return parent::setPointsTo($points_to);
    }

    /**
     * {@inheritDoc}
     */
    public function getPage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPage', array());

        return parent::getPage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPage($page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPage', array($page));

        return parent::setPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentCategory', array());

        return parent::getParentCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentCategory($parent_category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentCategory', array($parent_category));

        return parent::setParentCategory($parent_category);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildCategories', array());

        return parent::getChildCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildCategories($child_categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildCategories', array($child_categories));

        return parent::setChildCategories($child_categories);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleteLater()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleteLater', array());

        return parent::isDeleteLater();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleteLater($delete_later)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleteLater', array($delete_later));

        return parent::setDeleteLater($delete_later);
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\Library\Model\Product\Product $product, $sort_order = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', array($product, $sort_order));

        return parent::addProduct($product, $sort_order);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryDiscounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryDiscounts', array());

        return parent::getCategoryDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryDiscounts($category_discounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryDiscounts', array($category_discounts));

        return parent::setCategoryDiscounts($category_discounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryProducts', array());

        return parent::getCategoryProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryProducts($category_products)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryProducts', array($category_products));

        return parent::setCategoryProducts($category_products);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeywords', array());

        return parent::getKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeywords($keywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeywords', array($keywords));

        return parent::setKeywords($keywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultImage', array());

        return parent::getDefaultImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultImage($default_image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultImage', array($default_image));

        return parent::setDefaultImage($default_image);
    }

    /**
     * {@inheritDoc}
     */
    public function getSortOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortOrder', array());

        return parent::getSortOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortOrder($sort_order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortOrder', array($sort_order));

        return parent::setSortOrder($sort_order);
    }

    /**
     * {@inheritDoc}
     */
    public function getInactive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInactive', array());

        return parent::getInactive();
    }

    /**
     * {@inheritDoc}
     */
    public function setInactive($inactive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInactive', array($inactive));

        return parent::setInactive($inactive);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getQueryList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQueryList', array());

        return parent::getQueryList();
    }

    /**
     * {@inheritDoc}
     */
    public function setQueryList($query_list)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQueryList', array($query_list));

        return parent::setQueryList($query_list);
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data_array)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($data_array));

        return parent::setData($data_array);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($ignore_attribute = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($ignore_attribute));

        return parent::toArray($ignore_attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function showDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'showDisplayName', array());

        return parent::showDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModified($date_modified = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModified', array($date_modified));

        return parent::setDateModified($date_modified);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated($date_created = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', array($date_created));

        return parent::setDateCreated($date_created);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', array());

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModified', array());

        return parent::getDateModified();
    }

}
